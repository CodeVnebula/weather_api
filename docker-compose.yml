services:
  web:
    build: .
    container_name: weather_app
    ports:
      - 8000:8000
    volumes:
      - ./weather_app:/app
    depends_on:
      db:
        condition: service_healthy
        restart: true
    env_file:
      - .env

  db:
    image: postgres:latest
    container_name: weather_db
    volumes:
      - weather_db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    
  redis:
    image: redis:6
    ports:
      - "6379:6379"

  celery:
    build: .
    command: celery -A weather_app.celery worker -l info
    volumes:
      - .:/weather_app
    depends_on:
      - web
      - redis
      - db

  celery-beat:
    build: .
    command: celery -A weather_app.celery beat -l info
    volumes:
      - .:/weather_app
    depends_on:
      - web
      - redis
      - db

volumes:
  weather_db: